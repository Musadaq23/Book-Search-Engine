{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musad\\\\bootcamp\\\\solid-broccoli\\\\client\\\\src\\\\pages\\\\SavedBooks.js\",\n  _s = $RefreshSig$();\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  var _userData$savedBooks, _userData$savedBooks2;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_ME);\n  const [removeBook, {\n    error\n  }] = useMutation(REMOVE_BOOK);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || {};\n  console.log(userData);\n\n  // create function that accepts the book's bookId value as param and deletes the book from the database\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const {\n        data\n      } = await removeBook({\n        variables: {\n          bookId\n        }\n      });\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: \"true\",\n      className: \"text-light bg-dark p-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Viewing \", userData.username, \"'s books!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pt-5\",\n        children: (_userData$savedBooks = userData.savedBooks) !== null && _userData$savedBooks !== void 0 && _userData$savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: (_userData$savedBooks2 = userData.savedBooks) === null || _userData$savedBooks2 === void 0 ? void 0 : _userData$savedBooks2.map(book => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: book.image,\n                alt: `The cover for ${book.title}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Authors: \", book.authors]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: book.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-block btn-danger\",\n                  onClick: () => handleDeleteBook(book.bookId),\n                  children: \"Delete this Book!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, book.bookId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"YNr5zEWznJUZb057tKfkZQmowig=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["Container","Card","Button","Row","Col","useQuery","useMutation","QUERY_ME","REMOVE_BOOK","Auth","removeBookId","jsxDEV","_jsxDEV","Fragment","_Fragment","SavedBooks","_s","_userData$savedBooks","_userData$savedBooks2","loading","data","removeBook","error","userData","me","console","log","handleDeleteBook","bookId","token","loggedIn","getToken","variables","err","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","username","savedBooks","length","map","book","md","border","image","Img","src","alt","title","variant","Body","Title","authors","Text","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/musad/bootcamp/solid-broccoli/client/src/pages/SavedBooks.js"],"sourcesContent":["import {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\n\nconst SavedBooks = () => {\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n  console.log(userData);\n\n  // create function that accepts the book's bookId value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <div fluid='true' className='text-light bg-dark p-5'>\n        <Container>\n          <h1>Viewing {userData.username}'s books!</h1>\n        </Container>\n      </div>\n      <Container>\n        <h2 className='pt-5'>\n          {userData.savedBooks?.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <Row>\n          {userData.savedBooks?.map((book) => {\n            return (\n              <Col md=\"4\">\n                <Card key={book.bookId} border='dark'>\n                  {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                  <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <p className='small'>Authors: {book.authors}</p>\n                    <Card.Text>{book.description}</Card.Text>\n                    <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                      Delete this Book!\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}